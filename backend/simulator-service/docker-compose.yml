version: '3.8'

services:

  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    image: fleet-management/api-gateway:latest
    container_name: fleet-api-gateway
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - ENABLE_GLOBAL_RATE_LIMIT=true
      - INSTANCE_ID=api-gateway-1
      - REDIS_CONNECT_RETRIES=10
      - REDIS_CONNECT_RETRY_DELAY=2000
      - REDIS_STORE_RETRIES=5
      - SIMULATOR_SERVICE_URL=http://simulator-service:3004
    depends_on:
      - redis
      - simulator-service
    restart: unless-stopped
    networks:
      - fleet-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/gateway/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  simulator-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fleet-simulator-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://admin:password@mongodb:27017/fleet-simulator?authSource=admin
      - KAFKA_BROKERS=kafka:29092
      - PORT=3004
    depends_on:
      - mongodb
      - kafka
    command: node dist/server.js
    networks:
      - fleet-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    container_name: fleet-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb-data:/data/db
    networks:
      - fleet-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: fleet-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - fleet-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: fleet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - fleet-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 300M

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: fleet-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - fleet-network
    restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    container_name: fleet-mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - fleet-network
    restart: unless-stopped

networks:
  fleet-network:
    driver: bridge

volumes:
  mongodb-data: 
  redis-data: